# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    #strategy:
      #matrix:
        #node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test
    
    - name: Build the Docker image
      run: |
        docker login --username=${{ secrets.DOCKER_USERNAME }} registry.cn-shanghai.aliyuncs.com --password=${{ secrets.DOCKER_PASSWORD }}
        - echo -n ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin registry.cn-shanghai.aliyuncs.com
        docker build -t cheng:latest .
        docker tag cheng registry.cn-shanghai.aliyuncs.com/chengyou/cheng:latest
        docker push registry.cn-hangzhou.aliyuncs.com/chengyou/cheng:latest
      
    - name: ssh docker login
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ALIYUN_HOST }}
        username: ${{ secrets.ALIYUN_USERNAME }}
        password: ${{ secrets.ALIYUN_PASSWORD }}
        script: cd ~ && sh cheng.sh ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}
